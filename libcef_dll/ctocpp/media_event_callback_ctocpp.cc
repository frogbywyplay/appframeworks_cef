// Copyright (c) 2016 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#include "libcef_dll/ctocpp/media_event_callback_ctocpp.h"


// VIRTUAL METHODS - Body may be edited by hand.

void CefMediaEventCallbackCToCpp::EndOfStream() {
  cef_media_event_callback_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, end_of_stream))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->end_of_stream(_struct);
}

void CefMediaEventCallbackCToCpp::ResolutionChanged(int width, int height) {
  cef_media_event_callback_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, resolution_changed))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->resolution_changed(_struct,
      width,
      height);
}

void CefMediaEventCallbackCToCpp::VideoPTS(int64 pts) {
  cef_media_event_callback_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, video_pts))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->video_pts(_struct,
      pts);
}

void CefMediaEventCallbackCToCpp::AudioPTS(int64 pts) {
  cef_media_event_callback_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, audio_pts))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->audio_pts(_struct,
      pts);
}

void CefMediaEventCallbackCToCpp::HaveEnough() {
  cef_media_event_callback_t* _struct = GetStruct();
  if (CEF_MEMBER_MISSING(_struct, have_enough))
    return;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  _struct->have_enough(_struct);
}


// CONSTRUCTOR - Do not edit by hand.

CefMediaEventCallbackCToCpp::CefMediaEventCallbackCToCpp() {
}

template<> cef_media_event_callback_t* CefCToCpp<CefMediaEventCallbackCToCpp,
    CefMediaEventCallback, cef_media_event_callback_t>::UnwrapDerived(
    CefWrapperType type, CefMediaEventCallback* c) {
  NOTREACHED() << "Unexpected class type: " << type;
  return NULL;
}

#ifndef NDEBUG
template<> base::AtomicRefCount CefCToCpp<CefMediaEventCallbackCToCpp,
    CefMediaEventCallback, cef_media_event_callback_t>::DebugObjCt = 0;
#endif

template<> CefWrapperType CefCToCpp<CefMediaEventCallbackCToCpp,
    CefMediaEventCallback, cef_media_event_callback_t>::kWrapperType =
    WT_MEDIA_EVENT_CALLBACK;
